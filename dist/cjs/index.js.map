{"version":3,"file":"index.js","sources":["../../src/components/MonthInput/MonthInput.tsx","../../src/components/MonthPicker/MonthPicker.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport styles from \"./MonthInput.module.css\";\nimport \"../global.css\";\n\nexport interface MonthInputProps {\n  selected: { monthName: string; year: number };\n  lang?: string;\n  size?: \"small\" | \"large\";\n  bgColor?: string;\n  bgColorHover?: string;\n  textColor?: string;\n  showMonthPicker: boolean;\n  setShowMonthPicker: (show: boolean) => void;\n}\n\nexport function MonthInput(props: MonthInputProps) {\n  useEffect(() => {\n    const r = document.querySelector<HTMLElement>(\":root\");\n    if (!r) return;\n    if (props.bgColor) {\n      r.style.setProperty(\"--input-bg-color\", props.bgColor);\n    }\n    if (props.bgColorHover) {\n      r.style.setProperty(\"--input-hover-bg-color\", props.bgColorHover);\n    }\n    if (props.textColor) {\n      r.style.setProperty(\"--input-text-color\", props.textColor);\n    }\n    if (props.size == \"small\") {\n      r.style.setProperty(\"--month-input-font-size\", \"16px\");\n      r.style.setProperty(\"--month-input-width\", \"200px\");\n      r.style.setProperty(\"--month-input-padding\", \"0.5rem\");\n    }\n  }, []);\n\n  return (\n    <button\n      className={styles.monthInputField}\n      onClick={() => props.setShowMonthPicker(!props.showMonthPicker)}\n    >\n      {props.selected.monthName ??\n        new Date().toLocaleString(props.lang, { month: \"long\" })}{\" \"}\n      {props.selected.year}\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={props.size == \"small\" ? 16 : 24}\n        height={props.size == \"small\" ? 16 : 24}\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        className=\"lucide lucide-calendar\"\n      >\n        <rect width=\"18\" height=\"18\" x=\"3\" y=\"4\" rx=\"2\" ry=\"2\" />\n        <line x1=\"16\" x2=\"16\" y1=\"2\" y2=\"6\" />\n        <line x1=\"8\" x2=\"8\" y1=\"2\" y2=\"6\" />\n        <line x1=\"3\" x2=\"21\" y1=\"10\" y2=\"10\" />\n      </svg>\n    </button>\n  );\n}\n\nMonthInput.defaultProps = {\n  lang: \"en-US\",\n  size: \"large\",\n};\n","import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport styles from \"./MonthPicker.module.css\";\nimport \"../global.css\";\n\nexport interface MonthPickerProps {\n  selected: { month: number; year: number };\n  onChange: (date: {\n    month: number;\n    year: number;\n    monthName: string;\n    monthShortName: string;\n  }) => void;\n  setIsOpen: (isOpen: boolean) => void;\n  bgColorMonthActive?: string;\n  bgColorMonthHover?: string;\n  borderRadiusMonth?: string;\n  bgColorPicker?: string;\n  textColor?: string;\n  size?: string;\n  lang?: string;\n}\n\nexport function MonthPicker(props: MonthPickerProps) {\n  const [month, setMonth] = useState(\n    props.selected.month ? props.selected.month - 1 : new Date().getMonth()\n  );\n  const [year, setYear] = useState(\n    props.selected.year ?? new Date().getFullYear()\n  );\n\n  const setActiveMonthBgColor = (r: HTMLElement, color: string) => {\n    r.style.setProperty(\"--month-active-bg-color\", color);\n  };\n\n  useEffect(() => {\n    const r = document.querySelector<HTMLElement>(\":root\");\n    if (!r) {\n      return;\n    }\n    if (props.bgColorMonthActive) {\n      setActiveMonthBgColor(r, props.bgColorMonthActive);\n    }\n    if (props.bgColorMonthHover) {\n      r.style.setProperty(\"--month-hover-bg-color\", props.bgColorMonthHover);\n    }\n    if (props.borderRadiusMonth) {\n      r.style.setProperty(\"--month-border-radius\", props.borderRadiusMonth);\n    }\n    if (props.bgColorPicker) {\n      r.style.setProperty(\"--picker-bg-color\", props.bgColorPicker);\n    }\n    if (props.textColor) {\n      r.style.setProperty(\"--text-color\", props.textColor);\n    }\n    if (props.size == \"small\") {\n      r.style.setProperty(\"--picker-padding\", \"1rem\");\n      r.style.setProperty(\"--year-display-margin-top\", \"0.5rem\");\n      r.style.setProperty(\"--year-display-margin-bottom\", \"0.5rem\");\n      r.style.setProperty(\"--month-select-padding\", \"0.5rem\");\n    }\n  }, []);\n\n  const changeYear = (year: number) => {\n    setYear(year);\n  };\n\n  const getMonthNames = (\n    locale = \"en\",\n    format: \"numeric\" | \"2-digit\" | \"long\" | \"short\" | \"narrow\" = \"short\"\n  ) => {\n    const formatter = new Intl.DateTimeFormat(locale, {\n      month: format,\n      timeZone: \"UTC\",\n    });\n    const months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map((month) => {\n      const mm = month < 10 ? `0${month}` : month;\n      return new Date(`2023-${mm}-01T00:00:00+00:00`);\n    });\n    return months.map((date) => formatter.format(date));\n  };\n\n  const changeMonth = (month: number) => {\n    setMonth(month);\n    props.setIsOpen(false);\n    props.onChange({\n      month: month + 1,\n      year: year,\n      monthName: new Date(year, month).toLocaleString(\n        props.lang ? props.lang : \"en\",\n        {\n          month: \"long\",\n        }\n      ),\n      monthShortName: new Date(year, month).toLocaleString(\n        props.lang ? props.lang : \"en\",\n        {\n          month: \"short\",\n        }\n      ),\n    });\n  };\n\n  return (\n    <div className={styles.pickerContainer}>\n      <div className={styles.yearContainer}>\n        <button\n          className={styles.button}\n          aria-label=\"Previous Year\"\n          onClick={(e) => changeYear(year - 1)}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke={props.textColor ? props.textColor : \"#000\"}\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"lucide lucide-chevron-left\"\n          >\n            <path d=\"m15 18-6-6 6-6\" />\n          </svg>\n        </button>\n        <span aria-description=\"Year selected\" className={styles.bold1}>\n          {year}\n        </span>\n        <button\n          className={styles.button}\n          aria-label=\"Next Year\"\n          onClick={(e) => changeYear(year + 1)}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke={props.textColor ? props.textColor : \"#000\"}\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"lucide lucide-chevron-right\"\n          >\n            <path d=\"m9 18 6-6-6-6\" />\n          </svg>\n        </button>\n      </div>\n      <div className={styles.monthsContainer}>\n        {getMonthNames(props.lang).map((monthName, index) => {\n          return (\n            <button\n              key={index}\n              className={`${styles.month} ${styles.button} ${\n                index == month && props.selected.year == year\n                  ? styles.active\n                  : null\n              }`}\n              onClick={(e) => changeMonth(index)}\n            >\n              {monthName}\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"names":["MonthInput","props","useEffect","r","document","querySelector","bgColor","style","setProperty","bgColorHover","textColor","size","_jsxs","className","styles","monthInputField","onClick","setShowMonthPicker","showMonthPicker","_a","selected","monthName","Date","toLocaleString","lang","month","year","jsxs","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","_jsx","jsx","x","y","rx","ry","x1","x2","y1","y2","defaultProps","_b","useState","getMonth","setMonth","_c","getFullYear","setYear","bgColorMonthActive","color","setActiveMonthBgColor","bgColorMonthHover","borderRadiusMonth","bgColorPicker","changeYear","pickerContainer","children","yearContainer","button","e","d","bold1","monthsContainer","locale","format","formatter","Intl","DateTimeFormat","timeZone","months","map","mm","concat","date","getMonthNames","index","active","setIsOpen","onChange","monthShortName","changeMonth"],"mappings":"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"}