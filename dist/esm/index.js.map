{"version":3,"file":"index.js","sources":["../../src/components/MonthPicker/MonthPicker.tsx","../../src/components/MonthInput/MonthInput.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport styles from \"./MonthPicker.module.css\";\nimport \"../global.css\";\n\nexport interface MonthPickerProps {\n  selected: Date;\n  onChange: (date: Date) => void;\n  setIsOpen: (isOpen: boolean) => void;\n  bgColorMonthActive?: string;\n  bgColorMonthHover?: string;\n  borderRadiusMonth?: string;\n  bgColorPicker?: string;\n  textColor?: string;\n  size?: string;\n  lang?: string;\n}\n\nexport function MonthPicker(props: MonthPickerProps) {\n  const [selectedDate, setSelectedDate] = useState<Date>(new Date());\n\n  const displayedMonthIndex = new Date(\n    props.selected || selectedDate\n  ).getMonth();\n  const displayedYear = new Date(props.selected || selectedDate).getFullYear();\n\n  const setActiveMonthBgColor = (r: HTMLElement, color: string) => {\n    r.style.setProperty(\"--month-active-bg-color\", color);\n  };\n\n  useEffect(() => {\n    const r = document.querySelector<HTMLElement>(\":root\");\n    if (!r) {\n      return;\n    }\n    if (props.bgColorMonthActive) {\n      setActiveMonthBgColor(r, props.bgColorMonthActive);\n    }\n    if (props.bgColorMonthHover) {\n      r.style.setProperty(\"--month-hover-bg-color\", props.bgColorMonthHover);\n    }\n    if (props.borderRadiusMonth) {\n      r.style.setProperty(\"--month-border-radius\", props.borderRadiusMonth);\n    }\n    if (props.bgColorPicker) {\n      r.style.setProperty(\"--picker-bg-color\", props.bgColorPicker);\n    }\n    if (props.textColor) {\n      r.style.setProperty(\"--text-color\", props.textColor);\n    }\n    if (props.size == \"small\") {\n      r.style.setProperty(\"--picker-padding\", \"1rem\");\n      r.style.setProperty(\"--year-display-margin-top\", \"0.5rem\");\n      r.style.setProperty(\"--year-display-margin-bottom\", \"0.5rem\");\n      r.style.setProperty(\"--month-select-padding\", \"0.5rem\");\n    }\n  }, []);\n\n  const changeYear = (year: number) => {\n    setSelectedDate(new Date(year, displayedMonthIndex, 1));\n  };\n\n  const getMonthNames = (\n    locale = \"en\",\n    format: \"numeric\" | \"2-digit\" | \"long\" | \"short\" | \"narrow\" = \"short\"\n  ) => {\n    const formatter = new Intl.DateTimeFormat(locale, {\n      month: format,\n      timeZone: \"UTC\",\n    });\n    const months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map((month) => {\n      const mm = month < 10 ? `0${month}` : month;\n      const yyyy = new Date().getFullYear();\n      return new Date(`${yyyy}-${mm}-01T00:00:00+00:00`);\n    });\n    return months.map((date) => formatter.format(date));\n  };\n\n  const changeMonth = (month: number) => {\n    setSelectedDate(new Date(displayedYear, month, 1));\n    props.onChange(new Date(displayedYear, month, 1));\n    props.setIsOpen(false);\n  };\n\n  return (\n    <div className={styles.pickerContainer}>\n      <div className={styles.yearContainer}>\n        <button\n          className={styles.button}\n          aria-label=\"Previous Year\"\n          onClick={(e) => changeYear(displayedYear - 1)}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke={props.textColor ? props.textColor : \"#000\"}\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"lucide lucide-chevron-left\"\n          >\n            <path d=\"m15 18-6-6 6-6\" />\n          </svg>\n        </button>\n        <span aria-description=\"Year selected\" className={styles.bold1}>\n          {displayedYear}\n        </span>\n        <button\n          className={styles.button}\n          aria-label=\"Next Year\"\n          onClick={(e) => changeYear(displayedYear + 1)}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke={props.textColor ? props.textColor : \"#000\"}\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"lucide lucide-chevron-right\"\n          >\n            <path d=\"m9 18 6-6-6-6\" />\n          </svg>\n        </button>\n      </div>\n      <div className={styles.monthsContainer}>\n        {getMonthNames(props.lang).map((monthName, index) => {\n          return (\n            <button\n              key={index}\n              className={`${styles.month} ${styles.button} ${\n                index == displayedMonthIndex &&\n                displayedYear == new Date().getFullYear()\n                  ? styles.active\n                  : null\n              }`}\n              onClick={(e) => changeMonth(index)}\n            >\n              {monthName}\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport styles from \"./MonthInput.module.css\";\nimport \"../global.css\";\n\nexport interface MonthInputProps {\n  selected: Date;\n  lang?: string;\n  size?: \"small\" | \"large\";\n  bgColor?: string;\n  bgColorHover?: string;\n  textColor?: string;\n  showMonthPicker: boolean;\n  setShowMonthPicker: (show: boolean) => void;\n}\n\nexport function MonthInput(props: MonthInputProps) {\n  useEffect(() => {\n    const r = document.querySelector<HTMLElement>(\":root\");\n    if (!r) return;\n    if (props.bgColor) {\n      r.style.setProperty(\"--input-bg-color\", props.bgColor);\n    }\n    if (props.bgColorHover) {\n      r.style.setProperty(\"--input-hover-bg-color\", props.bgColorHover);\n    }\n    if (props.textColor) {\n      r.style.setProperty(\"--input-text-color\", props.textColor);\n    }\n    if (props.size == \"small\") {\n      r.style.setProperty(\"--month-input-font-size\", \"16px\");\n      r.style.setProperty(\"--month-input-width\", \"200px\");\n      r.style.setProperty(\"--month-input-padding\", \"0.5rem\");\n    }\n  }, []);\n\n  const displayedMonth = new Date(props.selected).toLocaleString(props.lang, {\n    month: \"long\",\n  });\n\n  const displayedYear = new Date(props.selected).getFullYear();\n\n  return (\n    <button\n      className={styles.monthInputField}\n      onClick={() => props.setShowMonthPicker(!props.showMonthPicker)}\n    >\n      <span>{displayedMonth}</span> <span>{displayedYear}</span>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={props.size == \"small\" ? 16 : 24}\n        height={props.size == \"small\" ? 16 : 24}\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        className=\"lucide lucide-calendar\"\n      >\n        <rect width=\"18\" height=\"18\" x=\"3\" y=\"4\" rx=\"2\" ry=\"2\" />\n        <line x1=\"16\" x2=\"16\" y1=\"2\" y2=\"6\" />\n        <line x1=\"8\" x2=\"8\" y1=\"2\" y2=\"6\" />\n        <line x1=\"3\" x2=\"21\" y1=\"10\" y2=\"10\" />\n      </svg>\n    </button>\n  );\n}\n\nMonthInput.defaultProps = {\n  lang: \"en-US\",\n  size: \"large\",\n};\n"],"names":["MonthPicker","props","_a","useState","Date","selectedDate","setSelectedDate","displayedMonthIndex","selected","getMonth","displayedYear","getFullYear","useEffect","r","document","querySelector","bgColorMonthActive","color","style","setProperty","setActiveMonthBgColor","bgColorMonthHover","borderRadiusMonth","bgColorPicker","textColor","size","changeYear","year","_jsxs","className","styles","pickerContainer","children","yearContainer","_jsx","button","onClick","e","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","bold1","monthsContainer","locale","format","formatter","Intl","DateTimeFormat","month","timeZone","map","mm","concat","yyyy","date","getMonthNames","lang","monthName","index","active","onChange","setIsOpen","MonthInput","bgColor","bgColorHover","displayedMonth","toLocaleString","monthInputField","setShowMonthPicker","showMonthPicker","x","y","rx","ry","x1","x2","y1","y2","defaultProps"],"mappings":"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"}