{"version":3,"file":"index.js","sources":["../../src/components/MonthInput/MonthInput.tsx","../../src/components/MonthPicker/MonthPicker.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport styles from \"./MonthInput.module.css\";\nimport \"../global.css\";\n\nexport interface MonthInputProps {\n  selected: Date;\n  lang?: string;\n  size?: \"small\" | \"large\";\n  bgColor?: string;\n  bgColorHover?: string;\n  textColor?: string;\n  showMonthPicker: boolean;\n  setShowMonthPicker: (show: boolean) => void;\n}\n\nexport function MonthInput(props: MonthInputProps) {\n  useEffect(() => {\n    const r = document.querySelector<HTMLElement>(\":root\");\n    if (!r) return;\n    if (props.bgColor) {\n      r.style.setProperty(\"--input-bg-color\", props.bgColor);\n    }\n    if (props.bgColorHover) {\n      r.style.setProperty(\"--input-hover-bg-color\", props.bgColorHover);\n    }\n    if (props.textColor) {\n      r.style.setProperty(\"--input-text-color\", props.textColor);\n    }\n    if (props.size == \"small\") {\n      r.style.setProperty(\"--month-input-font-size\", \"16px\");\n      r.style.setProperty(\"--month-input-width\", \"200px\");\n      r.style.setProperty(\"--month-input-padding\", \"0.5rem\");\n    }\n  }, []);\n\n  const displayedMonth = new Date(props.selected).toLocaleString(props.lang, {\n    month: \"long\",\n  });\n\n  const displayedYear = new Date(props.selected).getFullYear();\n\n  return (\n    <button\n      className={styles.monthInputField}\n      onClick={() => props.setShowMonthPicker(!props.showMonthPicker)}\n    >\n      <span>{displayedMonth}</span> <span>{displayedYear}</span>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={props.size == \"small\" ? 16 : 24}\n        height={props.size == \"small\" ? 16 : 24}\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        className=\"lucide lucide-calendar\"\n      >\n        <rect width=\"18\" height=\"18\" x=\"3\" y=\"4\" rx=\"2\" ry=\"2\" />\n        <line x1=\"16\" x2=\"16\" y1=\"2\" y2=\"6\" />\n        <line x1=\"8\" x2=\"8\" y1=\"2\" y2=\"6\" />\n        <line x1=\"3\" x2=\"21\" y1=\"10\" y2=\"10\" />\n      </svg>\n    </button>\n  );\n}\n\nMonthInput.defaultProps = {\n  lang: \"en-US\",\n  size: \"large\",\n};\n","import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport styles from \"./MonthPicker.module.css\";\nimport \"../global.css\";\n\nexport interface MonthPickerProps {\n  selected: Date;\n  onChange: (date: Date) => void;\n  setIsOpen: (isOpen: boolean) => void;\n  bgColorMonthActive?: string;\n  bgColorMonthHover?: string;\n  borderRadiusMonth?: string;\n  bgColorPicker?: string;\n  textColor?: string;\n  size?: string;\n  lang?: string;\n}\n\nexport function MonthPicker(props: MonthPickerProps) {\n  const [selectedDate, setSelectedDate] = useState<Date>(new Date());\n\n  const displayedMonthIndex = new Date(\n    props.selected || selectedDate\n  ).getMonth();\n  const displayedYear = new Date(props.selected || selectedDate).getFullYear();\n\n  const setActiveMonthBgColor = (r: HTMLElement, color: string) => {\n    r.style.setProperty(\"--month-active-bg-color\", color);\n  };\n\n  useEffect(() => {\n    const r = document.querySelector<HTMLElement>(\":root\");\n    if (!r) {\n      return;\n    }\n    if (props.bgColorMonthActive) {\n      setActiveMonthBgColor(r, props.bgColorMonthActive);\n    }\n    if (props.bgColorMonthHover) {\n      r.style.setProperty(\"--month-hover-bg-color\", props.bgColorMonthHover);\n    }\n    if (props.borderRadiusMonth) {\n      r.style.setProperty(\"--month-border-radius\", props.borderRadiusMonth);\n    }\n    if (props.bgColorPicker) {\n      r.style.setProperty(\"--picker-bg-color\", props.bgColorPicker);\n    }\n    if (props.textColor) {\n      r.style.setProperty(\"--text-color\", props.textColor);\n    }\n    if (props.size == \"small\") {\n      r.style.setProperty(\"--picker-padding\", \"1rem\");\n      r.style.setProperty(\"--year-display-margin-top\", \"0.5rem\");\n      r.style.setProperty(\"--year-display-margin-bottom\", \"0.5rem\");\n      r.style.setProperty(\"--month-select-padding\", \"0.5rem\");\n    }\n  }, []);\n\n  const changeYear = (year: number) => {\n    setSelectedDate(new Date(year, displayedMonthIndex, 1));\n  };\n\n  const getMonthNames = (\n    locale = \"en\",\n    format: \"numeric\" | \"2-digit\" | \"long\" | \"short\" | \"narrow\" = \"short\"\n  ) => {\n    const formatter = new Intl.DateTimeFormat(locale, {\n      month: format,\n      timeZone: \"UTC\",\n    });\n    const months = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map((month) => {\n      const mm = month < 10 ? `0${month}` : month;\n      const yyyy = new Date().getFullYear();\n      return new Date(`${yyyy}-${mm}-01T00:00:00+00:00`);\n    });\n    return months.map((date) => formatter.format(date));\n  };\n\n  const changeMonth = (month: number) => {\n    setSelectedDate(new Date(displayedYear, month, 1));\n    props.onChange(new Date(displayedYear, month, 1));\n    props.setIsOpen(false);\n  };\n\n  return (\n    <div className={styles.pickerContainer}>\n      <div className={styles.yearContainer}>\n        <button\n          className={styles.button}\n          aria-label=\"Previous Year\"\n          onClick={(e) => changeYear(displayedYear - 1)}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke={props.textColor ? props.textColor : \"#000\"}\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"lucide lucide-chevron-left\"\n          >\n            <path d=\"m15 18-6-6 6-6\" />\n          </svg>\n        </button>\n        <span aria-description=\"Year selected\" className={styles.bold1}>\n          {displayedYear}\n        </span>\n        <button\n          className={styles.button}\n          aria-label=\"Next Year\"\n          onClick={(e) => changeYear(displayedYear + 1)}\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke={props.textColor ? props.textColor : \"#000\"}\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"lucide lucide-chevron-right\"\n          >\n            <path d=\"m9 18 6-6-6-6\" />\n          </svg>\n        </button>\n      </div>\n      <div className={styles.monthsContainer}>\n        {getMonthNames(props.lang).map((monthName, index) => {\n          return (\n            <button\n              key={index}\n              className={`${styles.month} ${styles.button} ${\n                index == displayedMonthIndex &&\n                displayedYear == new Date().getFullYear()\n                  ? styles.active\n                  : null\n              }`}\n              onClick={(e) => changeMonth(index)}\n            >\n              {monthName}\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"names":["MonthInput","props","useEffect","r","document","querySelector","bgColor","style","setProperty","bgColorHover","textColor","size","displayedMonth","Date","selected","toLocaleString","lang","month","displayedYear","getFullYear","_jsxs","jsxs","className","styles","monthInputField","onClick","setShowMonthPicker","showMonthPicker","children","_jsx","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x","y","rx","ry","x1","x2","y1","y2","jsx","defaultProps","_a","useState","selectedDate","setSelectedDate","displayedMonthIndex","getMonth","bgColorMonthActive","color","setActiveMonthBgColor","bgColorMonthHover","borderRadiusMonth","bgColorPicker","changeYear","year","pickerContainer","yearContainer","button","e","d","bold1","monthsContainer","locale","format","formatter","Intl","DateTimeFormat","timeZone","map","mm","concat","yyyy","date","getMonthNames","monthName","index","active","onChange","setIsOpen"],"mappings":"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"}